*break, continue 사용가능

1)while문
 - value = 0;
    while(value<5) {
        alert(value + '번째 반복');
        value++;
    }

2)do while문
 - let value = 0;
    do {
        alert(value + '번째 반복문');
        value++;
    } while(value<5);

3)for문
 - let array = ['포도', '사과', '바나나', '망고'];
    for(let i=0; i<array.length; i++) {
        alert(array[i]);
    }

4)for in문
 - for in은 객체의 반복에서 사용된다.
 - 배열에도 사용할 수 있지만 이 경우 index를 가져온다.
 - let array = ['포도', '사과', '바나나', '망고'];
    for(const i in array) {
        alert(array[i]);
    }
 - let user = {
        name: "Surim Son",
        age: 22
    };
    for(const key in user){
        console.log(key);
        console.log(user[key]);
    }

5)for of문
 - 배열의 반복에서 사용된다.
 - 객체에 적용시 에러가 리턴된다.
 - let arr = [1, 2, 3];
    for (var item of arr) {
    console.log(item); // 1, 2, 3
    }

6)foreach문
 - 배열의 반복에서 사용된다.
 - 배열의 처음부터 마지막 요소까지 반복하여 실행한다.
 - 인자로 콜백함수를 받으며 주어진 콜백함수를 배열 요소 각각에 대해 실행한다.
 - Current Value(명명된 매개변수) : 처리할 현재 요소
   Index(선택적 매개변수) : 처리할 현재 요소의 인덱스
   Array(선택적 매개변수) : forEach 메서드를 호출한 배열
 - const arr = ['가','나','다','라']; 
    arr.forEach(function(item,index,arr2){ 
        console.log(item,index,arr2[index+1]); 
    }) // 가 0 나, 나 1 다, 다 2 라, 라 3 undefined